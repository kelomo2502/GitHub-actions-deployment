
name: CI/CD Workflow

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test

    - name: Dockerize application
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      steps:
      - name: Log in to Docker Hub
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
      - name: Build and push Docker image
        run: |
          docker build -t $DOCKER_USERNAME/my-app .
          docker push $DOCKER_USERNAME/my-app

    - name: Set environment variables
      run: |
        echo "EC2_PUBLIC_IP=$(echo '${{ secrets.NODE_APP_GIT_ACTIONS_SECRET }}' | jq -r '.EC2_PUBLIC_IP')" >> $GITHUB_ENV
        echo "EC2_USER=$(echo '${{ secrets.NODE_APP_GIT_ACTIONS_SECRET }}' | jq -r '.EC2_USER')" >> $GITHUB_ENV
        echo "EC2_KEY=$(echo '${{ secrets.NODE_APP_GIT_ACTIONS_SECRET }}' | jq -r '.EC2_KEY' | base64)" >> $GITHUB_ENV

    - name: Deploy to EC2 instance
      run: |
        echo "$EC2_KEY" | base64 --decode > /tmp/private_key.pem
        chmod 600 /tmp/private_key.pem
        ssh -o StrictHostKeyChecking=no -i /tmp/private_key.pem $EC2_USER@$EC2_PUBLIC_IP << EOF
          docker pull $DOCKER_USERNAME/my-app
          docker stop my-app || true
          docker rm my-app || true
          docker run -d --name my-app -p 80:80 $DOCKER_USERNAME/my-app
        EOF
      shell: bash
